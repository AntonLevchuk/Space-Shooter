{
  "version": 3,
  "sources": ["../../eventemitter3-timer/node_modules/eventemitter3/index.js", "../../eventemitter3-timer/dist/webpack:/webpack/universalModuleDefinition", "../../eventemitter3-timer/dist/webpack:/webpack/bootstrap 71890bbcc4d91f16634e", "../../eventemitter3-timer/dist/webpack:/src/Timer.ts", "../../eventemitter3-timer/dist/webpack:/src/TimerManager.ts", "../../eventemitter3-timer/dist/webpack:/src/index.ts", "../../eventemitter3-timer/dist/webpack:/external \"eventemitter3\""],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EE3Timer\"] = factory();\n\telse\n\t\troot[\"EE3Timer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71890bbcc4d91f16634e", "import { TimerManager } from \"./TimerManager\";\nimport { EventEmitter } from \"eventemitter3\";\n\n/**\n * A Simple Timer class extending [EventEmitter3](https://github.com/primus/eventemitter3)\n *\n * Auther: Shen Yiming(soimy@163.com)\n *\n * Repo: https://github.com/soimy/pixi-timer\n *\n * @export\n * @class Timer\n * @extends {EventEmitter}\n */\nexport class Timer extends EventEmitter {\n\n    /**\n     * The global TimerManager which is default to all newly created timers.\n     *\n     * @static\n     * @type {TimerManager}\n     * @memberof Timer\n     */\n    public static get timerManager(): TimerManager {\n        if (!Timer._timerManager) Timer._timerManager = new TimerManager();\n        return Timer._timerManager;\n    }\n    private static _timerManager: TimerManager;\n\n    /**\n     * The time until timer triggered.\n     *\n     * @type {number}\n     * @memberof Timer\n     */\n    public time: number;\n\n    /**\n     * The activation status of timer.\n     *\n     * @type {boolean}\n     * @memberof Timer\n     */\n    public active: boolean;\n\n    /**\n     * Status indicator: whether this timer is ended.\n     *\n     * @type {boolean}\n     * @memberof Timer\n     */\n    public isEnded: boolean;\n\n    /**\n     * Status indicator: whether this timer is started.\n     *\n     * @type {boolean}\n     * @memberof Timer\n     */\n    public isStarted: boolean;\n\n    /**\n     * Delay in ms before timer starts\n     *\n     * @type {number}\n     * @memberof Timer\n     */\n    public delay: number;\n\n    /**\n     * The repeat count before timer stop\n     *\n     * @type {number}\n     * @memberof Timer\n     */\n    public repeat: number;\n\n    /**\n     * Whether this timer loops forever\n     *\n     * @type {boolean}\n     * @memberof Timer\n     */\n    public loop: boolean;\n\n    /**\n     * Whether this timer is expired and should be removed from timerManager.\n     *\n     * @type {boolean}\n     * @memberof Timer\n     */\n    public expire: boolean;\n\n    /**\n     * The timerManager this timer is assigned to.\n     *\n     * @type {(TimerManager | null)}\n     * @memberof Timer\n     */\n    public get timerManager(): TimerManager | null { return this._timerManager; }\n    public set timerManager(value: TimerManager | null) { this._timerManager = value; }\n\n    private _delayTime: number;\n    private _elapsedTime: number;\n    private _repeat: number;\n    private _timerManager: TimerManager | null;\n\n    /**\n     * Creates an instance of Timer.\n     *\n     * Newly created timers will be default to be added to the global timerManager.\n     * Can manually create TimerManager and assign timers.\n     *\n     * @param {number} [time=1] The time is ms before timer end or repedeated.\n     * @memberof Timer\n     */\n    constructor(time = 1) {\n        super();\n        this.time = time;\n        if (!Timer._timerManager) Timer._timerManager = new TimerManager();\n        Timer._timerManager.addTimer(this);\n        this._timerManager = Timer._timerManager;\n\n        this.active = false;\n        this.isEnded = false;\n        this.isStarted = false;\n        this.expire = false;\n        this.delay = 0;\n        this.repeat = 0;\n        this.loop = false;\n\n        this._delayTime = 0;\n        this._elapsedTime = 0;\n        this._repeat = 0;\n    }\n\n    /**\n     * Remove this timer from it's timerManager.\n     *\n     * @returns {Timer} Return self for chainable method.\n     * @memberof Timer\n     */\n    public remove(): Timer {\n        // if (!this.manager) return this;\n        Timer._timerManager.removeTimer(this);\n        return this;\n    }\n\n    /**\n     * Start timer from it's current time.\n     *\n     * A `started` event will be emitted.\n     *\n     * @returns {Timer} Return self for chainable method.\n     * @memberof Timer\n     */\n    public start(): Timer {\n        this.active = true;\n        return this;\n    }\n\n    /**\n     * Stop timer, current time stop updated.\n     *\n     * A `ended` event will be emitted.\n     *\n     * @returns {Timer} Return self for chainable method.\n     * @memberof Timer\n     */\n    public stop(): Timer {\n        this.active = false;\n        this.emit(\"stop\", this._elapsedTime);\n        return this;\n    }\n\n    /**\n     * Rest timer to it's initial status.\n     *\n     * @returns {Timer} Return self for chainable method.\n     * @memberof Timer\n     */\n    public reset(): Timer {\n        this._elapsedTime = 0;\n        this._repeat = 0;\n        this._delayTime = 0;\n        this.isStarted = false;\n        this.isEnded = false;\n        return this;\n    }\n\n    /**\n     * Increment timer's time. Should be put in main logic loop.\n     *\n     * Using `TimerManager.update()` method instead is recommended.\n     *\n     * @param {number} delta The amount of increment in ms.\n     * @returns {void}\n     * @memberof Timer\n     */\n    public update(delta: number): void {\n        if (!this.active)return;\n        if (this.delay > this._delayTime) {\n            this._delayTime += delta;\n            return;\n        }\n\n        if (!this.isStarted) {\n            this.isStarted = true;\n            this.emit(\"start\", this._elapsedTime);\n        }\n\n        if (this.time > this._elapsedTime) {\n            const t = this._elapsedTime + delta;\n            const ended = (t >= this.time);\n\n            this._elapsedTime = (ended) ? this.time : t;\n            this.emit(\"update\", this._elapsedTime, delta);\n\n            if (ended) {\n                if (this.loop || this.repeat > this._repeat) {\n                    this._repeat++;\n                    this.emit(\"repeat\", this._elapsedTime, this._repeat);\n                    this._elapsedTime = 0;\n                    return;\n                }\n\n                this.isEnded = true;\n                this.active = false;\n                this.emit(\"end\", this._elapsedTime);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Timer.ts", "import { Timer } from \"./Timer\";\n\n/**\n * Manager class for Timers\n *\n * @export\n * @class TimerManager\n */\nexport class TimerManager {\n    public timers: Timer[];\n\n    private _timersToDelete: Timer[];\n    private _last: number;\n\n    /**\n     * Creates an instance of TimerManager.\n     * @memberof TimerManager\n     */\n    constructor() {\n        this.timers = [];\n        this._timersToDelete = [];\n\n        this._last = 0;\n    }\n\n    /**\n     * Increment all managed timers' time.\n     *\n     * Better to use this method instead of `timers.update()` for centralized control.\n     *\n     * @param {number} [delta] The increment amount in ms. Omit to use internal deltams.\n     * @memberof TimerManager\n     */\n    public update(delta?: number): void {\n        if (!delta && delta !== 0) {\n            delta = this._getDeltaMS();\n        }\n\n        if (this._timersToDelete.length) {\n            for (const timerToDel of this._timersToDelete) {\n                this._remove(timerToDel);\n            }\n            this._timersToDelete.length = 0;\n        }\n\n        for (const timer of this.timers) {\n            if (timer.active) {\n                timer.update(delta);\n                if (timer.isEnded && timer.expire) {\n                    this.removeTimer(timer);\n                }\n            }\n        }\n\n    }\n\n    /**\n     * Remove timer from this timerManager.\n     *\n     * @param {Timer} timer The timer to be removed.\n     * @memberof TimerManager\n     */\n    public removeTimer(timer: Timer): void {\n        this._timersToDelete.push(timer);\n        timer.timerManager = null;\n    }\n\n    /**\n     * Add timer to this timerManager, and remove timer from it's original timerManager.\n     *\n     * @param {Timer} timer The timer to be added.\n     * @memberof TimerManager\n     */\n    public addTimer(timer: Timer): void {\n        this.timers.push(timer);\n        if (timer.timerManager) timer.timerManager.removeTimer(timer);\n        timer.timerManager = this;\n    }\n\n    /**\n     * Create a new timer under this timerManager.\n     *\n     * @param {number} time time of newly created timer.\n     * @returns {Timer} The newly created timer.\n     * @memberof TimerManager\n     */\n    public createTimer(time: number): Timer {\n        const timer = new Timer(time);\n        this.addTimer(timer);\n        return timer;\n    }\n\n    private _remove(timer: Timer): void {\n        const index = this.timers.indexOf(timer);\n        if (index > -1) {\n            this.timers.splice(index, 1);\n        }\n    }\n\n    private _getDeltaMS(): number {\n        if (this._last === 0)this._last = Date.now();\n        const now = Date.now();\n        const deltaMS = now - this._last;\n        this._last = now;\n        return deltaMS;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TimerManager.ts", "export { Timer } from \"./Timer\";\r\nexport { TimerManager } from \"./TimerManager\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts", "module.exports = require(\"eventemitter3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter3\"\n// module id = 3\n// module chunks = 0"],
  "mappings": "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",
  "names": ["module", "exports", "Timer", "TimerManager"]
}
